<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>za.dsc.grp.site</groupId>
    <artifactId>dsc-grp-site</artifactId>
    <version>2.55</version>
    <relativePath>../dsc-grp-site</relativePath>
  </parent>
  <groupId>za.dsc.grp.lib</groupId>
  <artifactId>dsc-grp-lib-commons</artifactId>
  <name>GROUP RISK:// Commons Java Library</name>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
	  <version>4.12</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <finalName>dsc-grp-lib-commons</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
	  <plugin>
		  <groupId>external.atlassian.jgitflow</groupId>
            <artifactId>jgitflow-maven-plugin</artifactId>
            <version>1.0-m5.1</version>
		  <configuration>
		  
			<!-- Enable this to push to origin using SSH keys -->
			<enableSshAgent>false</enableSshAgent>
			<!-- Keep your maven submodules at the same version as the parent POM -->
			<autoVersionSubmodules>true</autoVersionSubmodules>
			<updateDependencies>true</updateDependencies>
			<!--
			  Pusing in-development features to origin allows all devs to see what each other
			  are working on
			-->
			<pushFeatures>false</pushFeatures>
			<!--
			  This allows the CI server (e.g. Jenkins) to automatically push new releases to
			  origin; you can then either manually deploy them or, if you are doing Continuous
			  Deployments, auto-deploy them to prod
			-->
			<pushReleases>false</pushReleases>
			<!--
			  Hot Fixes should be pushed to origin as well so that any dev can pick them up
			-->
			<pushHotfixes>false</pushHotfixes>
			<!--
			  Prevents deployments from dev workstations so that they can be done by a CI
			  server
			-->
			<noDeploy>false</noDeploy>
			<flowInitContext>
			  <!--
				You can customize your development branch name. Why? Because it's faster to type
				'git push origin dvlp'
				than
				'git push origin develop'
				;-)
			  -->
			  
			  <!-- You can also customize your tag prefixes -->
			  
			</flowInitContext>
			<username>giovanniroos</username>
			<password>c@36Siem</password>
		  </configuration>
		</plugin>
    </plugins>
  </build>
</project>
